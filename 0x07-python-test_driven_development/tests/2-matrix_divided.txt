>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]
>>> matrix_divided([[1, 2], [4, 5, 6]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[1, 2], [4, 5, 6]], 2)
Traceback (innermost last):
...
TypeError: Each row of the matrix must have the same size
>>> matrix_divided(["sad", [4, 5, 6]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(["asd", [4, 5, 6]], 2)
Traceback (innermost last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(["sad", [4, 5, 6]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1,"wqe"], [4, 5, 6]], 2)
Traceback (innermost last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2, 4], [4, 5, 6]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
>>> matrix_divided([[1, 2], [4, 5, 6]], 0)
Traceback (innermost last):
...
ZeroDivisionError: division by zero
>>> matrix_divided([None, [4, 5, 6]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1,None], [4, 5, 6]], 2)
Traceback (innermost last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats